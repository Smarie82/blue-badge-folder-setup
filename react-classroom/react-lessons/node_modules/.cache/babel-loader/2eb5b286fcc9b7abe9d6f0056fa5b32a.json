{"ast":null,"code":"var _jsxFileName = \"/Users/stephaniefalls/Desktop/BlueBadgeFolder Structure/blue-badge-folder-setup/react-classroom/react-lessons/src/components/Day3/Example.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Example = () => {\n  _s();\n\n  //Variables and useState are both storing data for us to use later in our component. They both exist is our component and we can pass them as props.\n  //However,  useState re-renders in our browswer as it updates. Where as variables do NOT.\n  const [number1, setNumber1] = useState(10);\n  let number2 = 5;\n\n  const usingState = () => {};\n\n  const usingVariable = () => {\n    let decrease = number2 - 1;\n    document.getElementById(\"number2\").textContent = decrease;\n    console.log(decrease);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: usingState,\n      children: \"number1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: number1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: usingVariable,\n      children: \"number2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"id=\\\"number2\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Example, \"eIMMrzRK2QgrWmvgmtYN8dtOAIw=\");\n\n_c = Example;\nexport default Example;\n\nvar _c;\n\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"sources":["/Users/stephaniefalls/Desktop/BlueBadgeFolder Structure/blue-badge-folder-setup/react-classroom/react-lessons/src/components/Day3/Example.jsx"],"names":["React","useState","Example","number1","setNumber1","number2","usingState","usingVariable","decrease","document","getElementById","textContent","console","log"],"mappings":";;;AAAA,SAAQA,KAAR,EAAeC,QAAf,QAA8B,OAA9B;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB;AACA;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,EAAD,CAAtC;AACA,MAAII,OAAO,GAAG,CAAd;;AAEA,QAAMC,UAAU,GAAG,MAAM,CAExB,CAFD;;AAIA,QAAMC,aAAa,GAAG,MAAM;AACxB,QAAIC,QAAQ,GAAGH,OAAO,GAAG,CAAzB;AACAI,IAAAA,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,WAAnC,GAAiDH,QAAjD;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACH,GAJD;;AAMA,sBACI;AAAA,4BACI;AAAQ,MAAA,OAAO,EAAEF,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEQ;AAAA,gBAAIH;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFR,eAGI;AAAQ,MAAA,OAAO,EAAEI,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAIQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAxBD;;GAAML,O;;KAAAA,O;AA0BN,eAAeA,OAAf","sourcesContent":["import {React, useState} from 'react';\n\nconst Example = () => {\n    //Variables and useState are both storing data for us to use later in our component. They both exist is our component and we can pass them as props.\n    //However,  useState re-renders in our browswer as it updates. Where as variables do NOT.\n    const [number1, setNumber1] = useState(10);\n    let number2 = 5;\n\n    const usingState = () => {\n\n    }\n\n    const usingVariable = () => {\n        let decrease = number2 - 1;\n        document.getElementById(\"number2\").textContent = decrease;\n        console.log(decrease);\n    }\n\n    return(\n        <div>\n            <button onClick={usingState}>number1</button>\n                <p>{number1}</p>\n            <button onClick={usingVariable}>number2</button>\n                <p>id=\"number2\"</p>\n        </div>\n    )\n}\n\nexport default Example;"]},"metadata":{},"sourceType":"module"}