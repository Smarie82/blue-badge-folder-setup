{"ast":null,"code":"var _jsxFileName = \"/Users/stephaniefalls/Desktop/BlueBadgeFolder Structure/blue-badge-folder-setup/react-classroom/react-lessons/src/components/Day3/Example.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Example = () => {\n  _s();\n\n  //Variables and useState are both storing data for us to use later in our component. They both exist is our component and we can pass them as props.\n  //However,  useState re-renders in our browswer as it updates. Where as variables do NOT.\n  const [number1, setNumber1] = useState(10);\n  let number2 = 5;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: number1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: number2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Example, \"eIMMrzRK2QgrWmvgmtYN8dtOAIw=\");\n\n_c = Example;\nexport default Example;\n\nvar _c;\n\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"sources":["/Users/stephaniefalls/Desktop/BlueBadgeFolder Structure/blue-badge-folder-setup/react-classroom/react-lessons/src/components/Day3/Example.jsx"],"names":["React","useState","Example","number1","setNumber1","number2"],"mappings":";;;AAAA,SAAQA,KAAR,EAAeC,QAAf,QAA8B,OAA9B;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB;AACA;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,EAAD,CAAtC;AACA,MAAII,OAAO,GAAG,CAAd;AACA,sBACI;AAAA,4BACQ;AAAA,gBAAIF;AAAJ;AAAA;AAAA;AAAA;AAAA,YADR,eAEQ;AAAA,gBAAIE;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAXD;;GAAMH,O;;KAAAA,O;AAaN,eAAeA,OAAf","sourcesContent":["import {React, useState} from 'react';\n\nconst Example = () => {\n    //Variables and useState are both storing data for us to use later in our component. They both exist is our component and we can pass them as props.\n    //However,  useState re-renders in our browswer as it updates. Where as variables do NOT.\n    const [number1, setNumber1] = useState(10);\n    let number2 = 5;\n    return(\n        <div>\n                <p>{number1}</p>\n                <p>{number2}</p>\n        </div>\n    )\n}\n\nexport default Example;"]},"metadata":{},"sourceType":"module"}