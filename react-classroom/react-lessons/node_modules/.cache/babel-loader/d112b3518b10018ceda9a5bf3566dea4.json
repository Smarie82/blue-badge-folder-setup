{"ast":null,"code":"var _jsxFileName = \"/Users/stephaniefalls/Desktop/BlueBadgeFolder Structure/blue-badge-folder-setup/react-classroom/react-lessons/src/components/Day1/Effect.jsx\",\n    _s = $RefreshSig$();\n\n//useEffect()\n//Effects are \"side effects\"\n//They wait and listen for the state to change or \"update\". It will fire off an action once the state has been updated.\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Effect = () => {\n  _s();\n\n  const [color, setColor] = useState(\"\");\n  console.log(color, \"line 9\"); //useEffect(callback function, [stateVariable])\n  //          function that fires an action, array that handles the updating and moutning. \n\n  const handleColorUpdate = e => {\n    if (color === \"\") {\n      setColor(\"BrightYellow\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleColorUpdate,\n      children: \"Click Me!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Effect, \"Q4bR0JdmsMD94TU+JW6ZMkPc9Fo=\");\n\n_c = Effect;\nexport default Effect;\n\nvar _c;\n\n$RefreshReg$(_c, \"Effect\");","map":{"version":3,"sources":["/Users/stephaniefalls/Desktop/BlueBadgeFolder Structure/blue-badge-folder-setup/react-classroom/react-lessons/src/components/Day1/Effect.jsx"],"names":["useState","useEffect","Effect","color","setColor","console","log","handleColorUpdate","e"],"mappings":";;;AAAA;AAEA;AACA;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAAmB,QAAnB,EAFiB,CAIjB;AACA;;AAEA,QAAMI,iBAAiB,GAAIC,CAAD,IAAM;AAC5B,QAAGL,KAAK,KAAK,EAAb,EAAiB;AACbC,MAAAA,QAAQ,CAAC,cAAD,CAAR;AACH;AACJ,GAJD;;AAMA,sBACI;AAAA,2BACI;AAAQ,MAAA,OAAO,EAAEG,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAlBD;;GAAML,M;;KAAAA,M;AAoBN,eAAeA,MAAf","sourcesContent":["//useEffect()\n\n//Effects are \"side effects\"\n//They wait and listen for the state to change or \"update\". It will fire off an action once the state has been updated.\nimport { useState, useEffect } from \"react\";\n\nconst Effect = () => {\n    const [color, setColor] = useState(\"\");\n    console.log(color, \"line 9\")\n\n    //useEffect(callback function, [stateVariable])\n    //          function that fires an action, array that handles the updating and moutning. \n\n    const handleColorUpdate = (e) =>{\n        if(color === \"\") {\n            setColor(\"BrightYellow\");\n        }\n    };\n\n    return(\n        <div>\n            <button onClick={handleColorUpdate}>Click Me!</button>\n        </div>\n    )\n};\n\nexport default Effect;"]},"metadata":{},"sourceType":"module"}